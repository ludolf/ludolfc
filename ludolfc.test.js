const fs = require('fs')
const LudolfC = require('./ludolfc')
const ludolfC = new LudolfC();

test('eight times zero', () => {
  ludolfC.execute(fs.readFileSync('./test/eight.lc'))
  expect(ludolfC.hasVariable('o')).toBe(true)
  expect(ludolfC.getVariable('o').type).toBe('NUMBER')
  expect(ludolfC.getVariable('o').value).toBe(0)

  expect(ludolfC.hasVariable('_1')).toBe(true)
  expect(ludolfC.getVariable('_1').type).toBe('NUMBER')
  expect(ludolfC.getVariable('_1').value).toBe(0)
  expect(ludolfC.hasVariable('_2')).toBe(true)
  expect(ludolfC.getVariable('_2').type).toBe('NUMBER')
  expect(ludolfC.getVariable('_2').value).toBe(0)
  expect(ludolfC.hasVariable('_3')).toBe(true)
  expect(ludolfC.getVariable('_3').type).toBe('NUMBER')
  expect(ludolfC.getVariable('_3').value).toBe(0)
  expect(ludolfC.hasVariable('_4')).toBe(true)
  expect(ludolfC.getVariable('_4').type).toBe('NUMBER')
  expect(ludolfC.getVariable('_4').value).toBe(0)
  expect(ludolfC.hasVariable('_5')).toBe(true)
  expect(ludolfC.getVariable('_5').type).toBe('NUMBER')
  expect(ludolfC.getVariable('_5').value).toBe(0)
  expect(ludolfC.hasVariable('_6')).toBe(true)
  expect(ludolfC.getVariable('_6').type).toBe('NUMBER')
  expect(ludolfC.getVariable('_6').value).toBe(0)
  expect(ludolfC.hasVariable('_7')).toBe(true)
  expect(ludolfC.getVariable('_7').type).toBe('NUMBER')
  expect(ludolfC.getVariable('_7').value).toBe(0)
  expect(ludolfC.hasVariable('_8')).toBe(true)
  expect(ludolfC.getVariable('_8').type).toBe('NUMBER')
  expect(ludolfC.getVariable('_8').value).toBe(0)
  expect(ludolfC.hasVariable('_9')).toBe(true)
  expect(ludolfC.getVariable('_9').type).toBe('NUMBER')
  expect(ludolfC.getVariable('_9').value).toBe(-1)
})

test('source #1', () => {
  ludolfC.execute(fs.readFileSync('./test/source1.lc'))
  expect(ludolfC.hasVariable('a1')).toBe(true)
})